<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin.dao.face.AdminDao">
<select id="selectLoginCnt" parameterType="admin.dto.Admin" resultType="int">
SELECT count(*) FROM ADMIN
WHERE 1=1
AND adminId = #{adminId}
AND adminPw = #{adminPw}  	
</select>

<select id="selectMemberCntAll" parameterType="admin.util.Paging" resultType="int">
SELECT count(*) FROM member WHERE 1=1
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
</select>

<select id="selectMemberAll" parameterType="admin.util.Paging" resultType="admin.dto.Member">
SELECT * FROM (SELECT rownum rnum, B.* FROM(SELECT * FROM member WHERE 1=1
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
 ORDER BY memberNo DESC)
B ORDER BY rnum) MEMBER WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<select id="selectMemberInfo" parameterType="admin.dto.Member" resultType="admin.dto.Member">
SELECT memberNo, memberId, memberName, memberNick, memberPw, memberBirth, memberTel, 
memberGender, genre, subcheck, postcode, roadaddress, jibunaddress, detailaddress, extraaddress
FROM MEMBER WHERE memberNo = #{memberNo}
</select>

<select id="selectNovelInfo" parameterType="admin.dto.Novel" resultType="admin.dto.Novel">
SELECT novel.novelNo, novel.memberNo, novel.title, novel.discription, novel.addDate, novel.category
FROM novel, member WHERE novel.memberNo = member.memberNo
AND novel.memberNo = #{memberNo}     
</select>

<select id="selectReviewInfo" parameterType="admin.dto.ReviewSns" resultType="admin.dto.ReviewSns">
SELECT feedNo, bookName, review, privacy, reviewDate FROM review_sns, book
WHERE book.bookNo = review_sns.bookNo
ANd memberNo = #{memberNo} ORDER BY feedNo DESC
</select>

<select id="selectCommentInfo" parameterType="admin.dto.Comment" resultType="admin.dto.Comment">
SELECT commentNo, content, addDate FROM comment_table WHERE memberNo = #{memberNo} ORDER BY commentNo DESC
</select>

<select id="selectNovelList" parameterType="admin.util.Paging" resultType="admin.dto.Novel">


	select * from (
			select rownum rnum, B.* FROM (
				select novel.*,
				(
					SELECT memberName FROM member WHERE novel.memberNo = member.memberNo
				) as memberName,
				(
					SELECT round(avg(score), 1) FROM episode WHERE novelNo = novel.novelNo
				) AS score
				from novel, member
            WHERE novel.memberNo = member.memberNo  
	<if test="keyword != null and !keyword.equals('')">
	AND ${searchType} like '%'||#{keyword}||'%'
	</if>	
			
				order by novelNo desc
				) B ORDER BY rnum
		) BOARD WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<select id="selectReviewList" parameterType="admin.util.Paging" resultType="admin.dto.ReviewSns">
SELECT * FROM (SELECT rownum rnum, B.* FROM(SELECT review_sns.feedNo, member.memberNo, member.memberName, member.memberId,
review_sns.bookNo, review_sns.review, review_sns.privacy, review_sns.reviewDate, book.bookName
FROM review_sns,member,book WHERE 1=1
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
AND review_sns.memberNo = member.memberNo
AND review_sns.bookNo = book.bookNo
 ORDER BY feedNo DESC)
B ORDER BY rnum) REVIEW_SNS WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<select id="selectCommentList" parameterType="admin.util.Paging" resultType="admin.dto.Comment">
SELECT * FROM (SELECT rownum rnum, B.* FROM(SELECT comment_table.commentNo, comment_table.memberNo, member.memberName, member.memberId,
comment_table.content, comment_table.addDate
FROM comment_table,member WHERE 1=1
AND comment_table.parentCmtNo = 0
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
AND comment_table.memberNo = member.memberNo
 ORDER BY commentNo DESC)
B ORDER BY rnum) c WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<select id="selectNovelCntAll" parameterType="admin.util.Paging" resultType="int">
SELECT count(*) FROM novel, member WHERE 1=1
AND member.memberNo = novel.memberNo
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
</select>

<select id="selectReviewCntAll" parameterType="admin.util.Paging" resultType="int">
SELECT count(*) FROM review_sns,member,book WHERE 1=1
AND member.memberNo = review_sns.memberNo
AND review_sns.bookNo = book.bookNo
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
</select>

<select id="selectCommentCntAll" parameterType="admin.util.Paging" resultType="int">
SELECT count(*) FROM comment_table, member WHERE 1=1
AND member.memberNo = comment_table.memberNo 
AND comment_table.parentCmtNo = 0
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
</select>

<delete id="deleteMember" parameterType="admin.dto.Member">
DELETE FROM member WHERE memberNo=#{memberNo}
</delete>

<delete id="deleteNovel" parameterType="admin.dto.Novel">
DELETE FROM novel WHERE novelNo=#{novelNo}
</delete>

<delete id="deleteReview" parameterType="admin.dto.ReviewSns">
DELETE FROM review_sns WHERE feedNo=#{feedNo}
</delete>

<delete id="deleteComment" parameterType="admin.dto.Comment">
DELETE FROM comment_table WHERE commentNo=#{commentNo}
</delete>

<select id="selectBookAll" parameterType="admin.util.Paging" resultType="admin.dto.Book">
SELECT * FROM (SELECT rownum rnum, B.* FROM(SELECT book.bookNo, book.genreNo, book.bookName, book.bookWriter,book.bookPublisher, genre.genreName 
FROM book, genre WHERE 1=1 
AND book.genreNo = genre.genreNo
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
 ORDER BY bookNo DESC)
B ORDER BY rnum) MEMBER WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<select id="selectBookCntAll" parameterType="admin.util.Paging" resultType="int">
SELECT count(*) FROM book, genre WHERE 1=1
AND book.genreNo = genre.genreNo
<if test="keyword != null and !keyword.equals('')">
AND ${searchType} like '%'||#{keyword}||'%'
</if>
</select>

<select id="selectBookByNo" parameterType="admin.dto.Book" resultType="admin.dto.Book">
SELECT book.bookNo, book.genreNo, book.bookName, book.bookWriter, book.bookPublisher, genre.genreName,
book.publishingYear, book.bookContent FROM book, genre
WHERE 1=1 AND book.genreNo = genre.genreNo
AND book.bookNo = #{bookNo}
</select>

<select id="selectBookName" resultType="admin.dto.Book">
SELECT * FROM genre
</select>

<insert id="insertBook" parameterType="admin.dto.Book">
	<selectKey order="BEFORE" keyColumn="bookNo" keyProperty="bookNo" resultType="int">
		SELECT book_seq.nextval AS bookNo FROM dual
		</selectKey>
		INSERT INTO book VALUES(#{bookNo}, #{genreNo}, #{bookName}, #{bookWriter}, #{bookPublisher}, #{publishingYear}, #{bookContent}, NULL)
</insert>

<update id="updateBook" parameterType="admin.dto.Book">
UPDATE book SET genreNo = #{genreNo}, bookName = #{bookName}, bookWriter = #{bookWriter}, bookPublisher = #{bookPublisher}, publishingYear = #{publishingYear}, bookContent = #{bookContent}
WHERE bookNo = #{bookNo}
</update>

<delete id="deleteBook" parameterType="admin.dto.Book">
DELETE FROM book WHERE bookNo = #{bookNo}
</delete>

<delete id="deleteCheckBook" parameterType="admin.dto.Book">
DELETE FROM book WHERE bookNo = #{bookNo}
</delete>

<select id="selectEpisodeList" resultType="admin.dto.Episode" parameterType="admin.util.Paging">
SELECT * FROM (SELECT rownum rnum, B.* FROM(SELECT episodeNo, novelNo, title, content, score, addDate FROM episode WHERE novelNo = #{novelNo}
 ORDER BY episodeNo DESC)
B ORDER BY rnum) EPISODE WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<select id="selectNovelByNovelNo" parameterType="admin.dto.Novel" resultType="admin.dto.Novel">
SELECT novelNo, memberNo, title, discription, addDate, category, imgOriginName, imgStoredName
FROM novel
WHERE novelNo = #{novelNo}
</select>

<select id="selectEpisodeCntAll" parameterType="admin.util.Paging" resultType="int">
SELECT count(*) FROM episode WHERE novelNo = #{novelNo}
</select>

<select id="selectEpisodeInfo" parameterType="admin.dto.Episode" resultType="admin.dto.Episode">
SELECT episode.episodeNo, episode.novelNo, episode.title, episode.content, episode.score, episode.addDate, member.memberName
FROM episode,novel,member 
WHERE episode.novelNo = novel.novelNo AND member.memberNo = novel.memberNo 
AND episodeNo = #{episodeNo}
ORDER BY episodeNo desc
</select>

<delete id="deleteEpisode" parameterType="admin.dto.Episode">
DELETE FROM episode WHERE episodeNo = #{episodeNo}
</delete>

<select id="selectNovelNoByEpisodeNo" parameterType="admin.dto.Episode" resultType="admin.dto.Episode">
SELECT novelNo,episodeNo FROM episode WHERE episodeNo = #{episodeNo}
</select>

<update id="updateEpisode" parameterType="admin.dto.Episode">
UPDATE episode SET title = #{title}, content = #{content}
WHERE episodeNo = #{episodeNo}
</update>

<select id="selectSubMemberCntAll" parameterType="admin.util.Paging" resultType="int">
SELECT count(*) FROM member WHERE subCheck = '구독중'
</select>

<select id="selectSubMemberAll" resultType="admin.dto.Subscription" parameterType="admin.util.Paging">
SELECT DISTINCT * FROM (SELECT rownum rnum, B.* FROM(SELECT member.memberNo, member.memberName, member.memberId, 
subscription.subNo, subscription.subDate, subscription.subTel, subscription.subTerm, subscription.subPay, subscription.postcode, subscription.roadaddress, subscription.jibunaddress, 
subscription.detailaddress, subscription.extraaddress
, (select count(*) from shipment WHERE shipmentDate = TO_CHAR(sysdate, 'YYYY-MM') AND memberNo = member.memberNo) checkShipment
FROM member, subscription WHERE member.memberNo = subscription.memberNo AND member.subCheck = '구독중' 
ORDER BY subNo DESC) B ORDER BY rnum) WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<select id="selectLatestMember" resultType="admin.dto.Member">
SELECT a.* FROM(SELECT * FROM member ORDER BY memberNo desc)a <![CDATA[WHERE rownum <= 5]]>
</select>

<select id="selectLatestBook" resultType="admin.dto.Book">
SELECT a.* FROM(SELECT b.bookNo, g.genreName, b.bookName, b.bookWriter, b.bookPublisher FROM book b, genre g WHERE b.genreNo = g.genreNo ORDER BY bookNo desc)a <![CDATA[WHERE rownum <= 5]]>
</select>

<select id="selectLatestNovel" resultType="admin.dto.Novel">
	select * from (
			select rownum rnum, B.* FROM (
				select novel.novelNo, novel.memberNo, novel.title, novel.discription, TO_CHAR(TO_DATE(novel.addDate, 'yyyy/mm/dd hh24:mi:ss'), 'YY-MM-DD') addDate, novel.category, novel.imgOriginName, novel.imgStoredName,
				(
					SELECT memberName FROM member WHERE novel.memberNo = member.memberNo
				) as memberName,
				(
					SELECT round(avg(score), 1) FROM episode WHERE novelNo = novel.novelNo
				) AS score
				from novel, member
            WHERE novel.memberNo = member.memberNo  
				order by novelNo desc
				) B ORDER BY rnum
		) BOARD <![CDATA[WHERE rownum <= 5]]>
</select>

<select id="selectLatestComment" resultType="admin.dto.Comment">
SELECT a.* FROM(SELECT c.commentNo, c.content, m.memberName, TO_CHAR(TO_DATE(c.addDate, 'yyyy/mm/dd hh24:mi:ss'), 'YY-MM-DD') addDate FROM comment_table c, member m WHERE c.memberNo = m.memberNo ORDER BY c.commentNo desc)a <![CDATA[WHERE rownum <= 5]]>
</select>

<select id="selectLatestReview" resultType="admin.dto.ReviewSns">
SELECT a.* FROM(SELECT r.feedNo, b.bookName, r.review, TO_CHAR(TO_DATE(r.reviewDate, 'yyyy/mm/dd'), 'yy-mm-dd') reviewDate, m.memberName FROM review_sns r, member m, book b WHERE r.memberNo = m.memberNo AND b.bookNo = r.bookNo ORDER BY r.feedNo desc)a <![CDATA[WHERE rownum <= 5]]>
</select>

<select id="selectMemberGenre" parameterType="admin.dto.Member" resultType="admin.dto.Member">
SELECT m.memberNo, m.genre, s.subNo FROM member m,subscription s WHERE m.memberNo = #{memberNo} AND m.memberNo = s.memberNo
</select>

<select id="selectBookByGenre" parameterType="admin.dto.Member" resultType="admin.dto.Book">
SELECT * FROM (
			SELECT b.bookNo, b.genreNo, b.bookName, b.bookWriter, b.bookPublisher, b.publishingYear, b.bookContent, b.grade FROM book b, member m
			WHERE b.genreNo IN ( ${genre} )
			ORDER BY DBMS_RANDOM.RANDOM
		) B
		WHERE rownum = 1
</select>

<insert id="insertShipment" parameterType="admin.dto.Shipment">
		INSERT INTO shipment (shipno, shipmentdate, memberno, bookno, subno )
		
		VALUES ( #{shipNo}, #{shipmentDate}, #{memberNo}, #{bookNo}, #{subNo} )	
</insert>

<select id="checkShipment" parameterType="admin.util.Paging" resultType="admin.dto.Shipment">
	SELECT DISTINCT * FROM (SELECT rownum rnum, B.* FROM(SELECT member.memberNo, member.memberName, member.memberId, 
subscription.subNo, subscription.subDate, subscription.subTel, subscription.subTerm, subscription.subPay, subscription.postcode, subscription.roadaddress, subscription.jibunaddress, 
subscription.detailaddress, subscription.extraaddress
, (select count(*) from shipment WHERE shipmentDate = TO_CHAR(sysdate, 'YYYY-MM') AND memberNo = member.memberNo) checkShipment
FROM member, subscription WHERE member.memberNo = subscription.memberNo AND member.subCheck = '구독중' 
ORDER BY subNo DESC) B ORDER BY rnum) WHERE rnum BETWEEN #{startNo} AND #{endNo}
</select>

<update id="updateNovel" parameterType="admin.dto.Novel">
UPDATE novel SET title = #{title}
WHERE novelNo = #{novelNo}
</update>

<select id="selectShipmentList" resultType="admin.dto.Shipment" parameterType="admin.dto.Shipment">
select ship.shipNo, ship.shipmentDate, ship.memberNo, ship.bookNo, ship.subNo, sub.subDate, sub.subName, sub.subTel, sub.subTerm, sub.subPay, sub.postCode, sub.roadAddress, sub.jibunAddress, sub.detailAddress, sub.extraAddress, b.bookName, m.memberName
FROM shipment ship, subscription sub, book b, member m WHERE ship.memberNo = sub.memberNo AND b.bookNo = ship.bookNo AND m.memberNo = ship.memberNo AND ship.memberNo = #{memberNo} 
</select>

<select id="selectReplyList" parameterType="admin.dto.Comment" resultType="admin.dto.Comment">
SELECT c.commentNo, c.episodeNo, c.memberNo, m.memberName, c.content, c.addDate, c.parentCmtNo, c.seq 
FROM member m, comment_table c
WHERE m.memberNo = c.memberNo AND c.parentCmtNo = #{commentNo} ORDER BY c.seq desc
</select>


</mapper>